--insert data mahasiswa
insert into MAHASISWA (NIM, NAMA) VALUES ('20180801316','wied artha pratama')
insert into MAHASISWA (NIM, NAMA) VALUES ('20180801314','andika rahmat hidayat')
insert into MAHASISWA (NIM, NAMA) VALUES ('20180801315','heri iskandar')
insert into MAHASISWA (NIM, NAMA) VALUES ('20180801317','ade lita')
insert into MAHASISWA (NIM, NAMA) VALUES ('20180801359','hendi sukma wijaya')
--melihat semua data mahasiswa
select * from MAHASISWA
--melihat semua data mahasiswa dengan pengurutan nim dari terkecil ke terbesar
select * from MAHASISWA order by NIM asc
--delete mahasiswa
delete from MAHASISWA where NIM='20180801316'
--update mahasiswa
update MAHASISWA set NIM='20180801316', NAMA='wied artha pratama wap' where NIM='20180801316'

--insert data dosen
insert into DOSEN (NIDN, NAMA) VALUES ('7135','bahrul ulum')
insert into DOSEN (NIDN, NAMA) VALUES ('7136','marzuki silalahi')
insert into DOSEN (NIDN, NAMA) VALUES ('7137','masmur tarigan')
insert into DOSEN (NIDN, NAMA) VALUES ('7138','kundang karsono')
insert into DOSEN (NIDN, NAMA) VALUES ('7139','binastya anggara')
--melihat semua data dosen
select * from DOSEN
--melihat semua data dosen dengan pengurutan nidn dari terkecil ke terbesar
select * from DOSEN order by NIDN asc
--delete dosen
delete from DOSEN where NIDN='7135'
--update dosen
update DOSEN set NIDN='7135', NAMA='aa bahrul' where NIDN='7135'

--insert data wali
insert into WALI (NIDN, NIM) VALUES ('7135','20180801316')
insert into WALI (NIDN, NIM) VALUES ('7135','20180801315')
insert into WALI (NIDN, NIM) VALUES ('7136','20180801317')
insert into WALI (NIDN, NIM) VALUES ('7136','20180801314')
insert into WALI (NIDN, NIM) VALUES ('7137','20180801359')
--melihat semua data wali
select * from WALI
--melihat semua data wali dengan pengurutan id dari terkecil ke terbesar
select * from WALI order by ID asc
--delete wali
delete from WALI where ID=1
--update wali
update WALI set NIDN='7137', NIM='20180801317' where ID=1
-- membuat trigger untuk auto increment wali
CREATE OR REPLACE TRIGGER WALI_TRG
 BEFORE INSERT ON WALI
 FOR EACH ROW
BEGIN
 SELECT WALI_SEQ.nextval
 INTO :new.ID
 FROM dual;
END;

--insert data matakuliah
insert into MATAKULIAH (KDMK, NAMA, SKS) VALUES ('CCB210','Basis Data', 4)
insert into MATAKULIAH (KDMK, NAMA, SKS) VALUES ('CCR210','Rekayasa Perangkat Lunak', 3)
insert into MATAKULIAH (KDMK, NAMA, SKS) VALUES ('CCP210','Pemrograman Berorientasi Objek', 4)
insert into MATAKULIAH (KDMK, NAMA, SKS) VALUES ('ESA104','Pendidikan Pancasila', 2)
insert into MATAKULIAH (KDMK, NAMA, SKS) VALUES ('ESA141','Motivasi Usaha', 1)
--melihat semua data matakuliah
select * from MATAKULIAH
--melihat semua data matakuliah dengan pengurutan sks dari terkecil ke terbesar
select * from MATAKULIAH order by SKS asc
--delete matakuliah
delete from MATAKULIAH where KDMK='ESA141'
--update matakuliah
update MATAKULIAH set KDMK='ESA142', NAMA='Motivasi Belajar', SKS=2 where KDMK='ESA141'

--insert data pengampu
insert into PENGAMPU (NIDN, KDMK) VALUES ('7135','CCB210')
insert into PENGAMPU (NIDN, KDMK) VALUES ('7135','CCR210')
insert into PENGAMPU (NIDN, KDMK) VALUES ('7136','CCP210')
insert into PENGAMPU (NIDN, KDMK) VALUES ('7136','ESA104')
insert into PENGAMPU (NIDN, KDMK) VALUES ('7137','ESA141')
--melihat semua data pengampu
select * from PENGAMPU
--melihat semua data pengampu dengan pengurutan id dari terkecil ke terbesar
select * from PENGAMPU order by ID asc
--delete pengampu
delete from PENGAMPU where ID=1
--update pengampu
update PENGAMPU set NIDN='7135', KDMK='CCB210' where ID=1
-- membuat trigger untuk auto increment pengampu
CREATE OR REPLACE TRIGGER PENGAMPU_TRG
 BEFORE INSERT ON PENGAMPU
 FOR EACH ROW
BEGIN
 SELECT PENGAMPU_SEQ.nextval
 INTO :new.ID
 FROM dual;
END;

--insert data krs
insert into KRS (NIM, KDMK) VALUES ('20180801316','CCB210')
insert into KRS (NIM, KDMK) VALUES ('20180801316','CCR210')
insert into KRS (NIM, KDMK) VALUES ('20180801314','CCP210')
insert into KRS (NIM, KDMK) VALUES ('20180801315','ESA104')
insert into KRS (NIM, KDMK) VALUES ('20180801317','ESA141')
--melihat semua data krs
select * from KRS
--melihat semua data krs dengan pengurutan id dari terkecil ke terbesar
select * from KRS order by ID asc
--delete krs
delete from KRS where ID=1
--update krs
update KRS set NIDN='20180801359', KDMK='CCB210' where ID=1
-- membuat trigger untuk auto increment krs
CREATE OR REPLACE TRIGGER KRS_TRG
 BEFORE INSERT ON KRS
 FOR EACH ROW
BEGIN
 SELECT KRS_SEQ.nextval
 INTO :new.ID
 FROM dual;
END;

-- 1. menampilkan krs dengan nama mahasiswa
select distinct K.NIM, M.NAMA, K.KDMK, MK.NAMA
from KRS K, MAHASISWA M, MATAKULIAH MK
where M.NIM=K.NIM 
and MK.KDMK=K.KDMK
and M.NAMA='wied artha pratama'
-- 2. menampilkan dosen pengampu matakuliah basis data
select distinct P.NIDN, D.NAMA, P.KDMK, MK.NAMA
from PENGAMPU P, DOSEN D, MATAKULIAH MK
where D.NIDN=P.NIDN
and MK.KDMK=P.KDMK
and MK.NAMA='Basis Data'
-- 3. menampilkan mahasiswa yang dosen walinya bahrul ulum
select distinct W.NIM, D.NAMA, W.NIM, M.NAMA
from WALI W, DOSEN D, MAHASISWA M
where D.NIDN=W.NIDN
and M.NIM=W.NIM
and D.NAMA='bahrul ulum'
-- 4. dosen yang memiliki mahasiswa terbanyak
select distinct D.NAMA, count(W.NIDN) as JUMLAH
from WALI W, DOSEN D
where W.NIDN=D.NIDN
group by W.NIDN, D.NAMA
order by JUMLAH desc;
-- 5. matakuliah favorit
select distinct MK.NAMA, count(K.KDMK) as JUMLAH
from KRS K, MATAKULIAH MK
where K.KDMK=MK.KDMK
group by K.KDMK, MK.NAMA
order by JUMLAH desc;

-- no 6
select o.orderno, o.dateorder, o.customer, p.productname, od.quantity, p.sellprice, (quantity*sellprice) as total
from torder o, orderdetails od, product p
where o.orderno=od.orderno and p.productname=od.productname

-- no 7
SELECT productname, sum(quantity)
FROM orderdetails
GROUP BY productname, quantity
ORDER BY quantity desc

-- no 8
select O.ORDERNO, CUSTOMER, S.PRODUCTNAME, OD.QUANTITY AS QTYSELL, DATEORDER,
 S.QUANTITY AS QTYFROM, to_char(OD.QUANTITY/S.QUANTITY*100)||' %' AS PERCENTAGE 
from TORDER O
join ORDERDETAILS OD
on O.ORDERNO=OD.ORDERNO
join STOCK S
on S.PRODUCTNAME=OD.PRODUCTNAME
order by ORDERNO ASC

-- update tambah product
create or replace trigger nov_update_qty_product
before insert on nov_purchase
    for each row    
    when (new.nama is not null)
begin
    update nov_product
    set qty_stock = qty_stock + :new.qty
    where nama = :new.nama;
end;

-- update kurang product
create or replace trigger nov_update_min_qty_product
before insert on nov_sell
    for each row    
    when (new.nama is not null)
begin
    update nov_product
    set qty_stock = qty_stock - :new.qty
    where nama = :new.nama;
end;
